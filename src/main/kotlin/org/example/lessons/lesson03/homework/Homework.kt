package org.example.lessons.lesson03.homework

class Homework {
//    1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
    val name: String = "Monster Hackaton"
//    2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var date: String = "10 ноября 2025"
//    3. Место проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var place: String = "Bar Puberty"
//    4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы (приватная переменная, неизменяемая)
    private val budget: String = "Еда: 20000, Аренда: 40000 и т. д."
//    5. Количество участников (публичная переменная, число, может меняться вплоть до начала мероприятия)
    var participants: Int = 50
        get() = field
        set(value){
                if (value <= maxparticipants) field = value
            }
//    6. Длительность хакатона (публичная, не меняется, определено заранее, в часах)
    val duration: Int = 48
//    7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг (приватное, определяется за N времени до начала один раз, не изменяется)
    private val agreements: String by lazy {
        "Contacts and contracts"
    }
//    8. Текущее состояние хакатона (статус) (публичный? - готовится/идет/закончен, изменяемый)
    var status: String = "Preparing"
//    9. Список спонсоров (публичный, утверждается вместе с бюджетом, не изменяется)
    val sponsons: String = "Google, Apple, Amazon"
//    10. Бюджет мероприятия (приватный, неизменяемый, число)
    private val totalbudget: Int = 5000000
//    11. Текущий уровень доступа к интернету (приватный, меняется по ходу)
    private var internetspeed: Int = 100
        get(){
            return if (field < 100) field else 100
        }
        set(value){
            if (value >= 0) field = value
        }
//    12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки (приватное, определяется за N времени до начала один раз, может изменяться по ходу меропрятия)
    private lateinit var resourses: String
//    13. Количество команд (публичная переменная, число, может меняться вплоть до начала мероприятия)
    var teams: Int = 15
//    14. Перечень задач (публичная, строка, не изменяется)
    val tasks: String = "List of tasks"
//    15. План эвакуации (публичная, строка, не изменяется)
    val evacplan: String = "List of tasks"
//    16. Список доступного оборудования (всё, что выделено для использования на мероприятии) (публичная, строка, не изменяется)
    val listofdevices: String = "Devices"
//    17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
    var listoffreedevices: String = "Free Devices"
//    18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
    val mealplan: String by lazy {
        "Meal plan here!"
    }
//    19. План мероприятий на случай сбоев (приватный, неизменяемый)
    private val failplan: String = "Failsafe Plan"
//    20. Список экспертов и жюри (публичный, неизменяемый)
    val experts: String = "Expert 1, Expert 2"
//    21. Политика конфиденциальности (публичный, неизменяемый)
    val confidentiality: String = "Policy"
//    22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем
    private lateinit var feedback: String
//    23. Текущая температура в помещении (публичная, градусы)
    var temp: Int = 25
//    24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
    var monitoringdata: String = "Everything is fine"
//    25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
    private var speedcoef: Double = 0.5
        set(value){
            if (value >= 0) field = value
        }
//    26. Уровень освещения
    private var lightlevel: Int = 4
        set(value){
            if (value >= 0) field = value
        }
//    27. Лог событий мероприятия
    private var eventlog: String = "Event 1, Event 2"
//    28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
    private var medhelp: Boolean = true
//    29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций
    private val evacplans: String = "Here"
//    30. Регистрационный номер мероприятия
    private val regnum: Int = 43893498
//    31. Максимально допустимый уровень шума в помещении хакатона (приватный, зависит от помещения)
    private val noiselvel: Int by lazy {
        23
    }
//    32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
    var isnoiseloud: Boolean = false
//    33. План взаимодействия с прессой
    private val pressplan: String = "Press talk"
//    34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок
    val projects: String by lazy {
        "Projects will be here"
    }
//    35. Статус получения всех необходимых разрешений для проведения мероприятия
    private var permissions: Boolean = false
//    36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
    private var specialequipment: Boolean = true
//    37. Список партнеров мероприятия
    val partners: String = "Partner 1, Partner 2"
//    38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия
    val hackathonreport: String by lazy {
        "Here is some info about hackathon"
    }
//    39. Внутренние правила распределения призов
    private val prizerules: String = "First place = fastest"
//    40. Список разыгрываемых призов
    val prizes: String = "Laptop, PS5"
//    41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования
    private val contacts: String = "112"
//    42. Особые условия для участников с ограниченными возможностями
    val specialcond: String = "Help"
//    43. Общее настроение участников (определяется опросами)
    private var mood: String = "Good"
//    44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач
    private val internalplan: String by lazy {
        "Hello, this is a lazy string!"
    }
//    45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно
    val specialguest: String by lazy {
        "Special Guest"
    }
//    46. Максимальное количество людей, которое может вместить место проведения (публичное, не меняется, зависит от места проведения)
    val maxparticipants: Int by lazy {
        70
    }
//    47. Количество часов, отведенное каждой команде для работы над проектом. (публичное, не меняется, одинаковое для всех)
    val hours: Int = 24
}